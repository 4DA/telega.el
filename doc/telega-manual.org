#+TITLE: Telega Manual
#+STARTUP: showall

#+BEGIN_QUOTE
This file is automatically generated from =telega-ellit.org= by
[[https://github.com/zevlg/ellit-org.el][GitHub#ellit-org.el]] tool.
Do not edit manually.
#+END_QUOTE

* Telega glossary

Before start, please read [[https://core.telegram.org/tdlib/getting-started#tdlib-glossary][TDLib glossary]]

=telega= tries to keep TDLib's terminology, however introduces some
new terms specific to =telega=.  All of them are used in the manual.

- Button ::
  Ordinary Emacs Button (see =button.el=).  Some outlined area with
  text, that can be acted on.  Pressing @@html:<kbd>@@RET@@html:</kbd>@@ on the
  button, executes button action.  There are many buttons of different
  kind in =telega=

- Root Buffer aka rootbuf ::
  Buffer with list of chats, you see it just after @@html:<kbd>@@M-x telega RET@@html:</kbd>@@.
  Most of the time rootbuf term is used in the manual.
  See [[Root Buffer]]

- Chat Buffer aka chatbuf ::
  Buffer with chat contents.
  See [[Chat Buffer]]

- Chat Button ::
  Button referring to some chat.  Action for such button is to open
  corresponding chatbuf.

  rootbuf lists the chat buttons.

- Chat Filter ::
  S-exp expression used to match chats.
  See [[Chat Filters]] for the details.

- Active Chat Filter ::
  Chat filter applied to the chat list in rootbuf.

* Root Buffer

rootbuf is the heart of =telega=.

*TODO*: describe parts of the rootbuf

** Fast navigation

@@html:<kbd>@@M-g@@html:</kbd>@@ prefix in rootbuf is used to jump across chat buttons.

- Key: @@html:<kbd>@@M-g u@@html:</kbd>@@ (~telega-root-next-unread~)

  Move point to the next chat with unread message.

- Key: @@html:<kbd>@@M-g i@@html:</kbd>@@ (~telega-root-next-important~)

  Move point to the next chat with important messages.

  Important message is unseen message in chat with enabled
  notifications. i.e. matching ~(and unread unmuted)~
  [[Chat Filters][chat filter]].

- Key: @@html:<kbd>@@M-g @@@html:</kbd>@@, @@html:<kbd>@@M-g m@@html:</kbd>@@ (~telega-root-next-mention~)

  Move point to the next chat with mention.

* Chat Filters

Chat Filters are used to match chats, same as regexps are used to
match strings.  Chat Filters uses S-exp notation similar to ~rx~
package for regexps.

Primitive Chat Filter is a specifier to match some property of the
chat.  Each primitive Chat Filter has name (elisp symbol) and
corresponding function named ~telega--filter-<FILTER-NAME>~.
You can specify primitive Chat Filter in either way:
  1. ~<FILTER-NAME>~
  2. ~( <FILTER-NAME> <ARG1> [<ARG2> ...] )~

Primitive Chat Filters are combined using ~and~, ~or~ and ~not~
filters, forming final Chat Filter.  So Chat Filter is a logical
combination of other Chat Filters, down to primitive Chat Filters.

Chat Filter examples:
  - all ::
    Matches all chats

  - (or saved-messages (type channel bot)) ::
    Matches bots/channels chats or "Saved Messages" chat

  - (and unmuted (unread 10) (mention 1)) ::
    Matches unmuted chats with at least 10 unread messages and at
    least one message with unread mention

** List of chat filters

- (any ~FILTER-LIST~..) ::
  Matches if any filter in ~FILTER-LIST~ matches.

- (or ~FILTER-LIST~..) ::
  Same as ~any~

- (all ~FILTER-LIST~..) ::
  Matches if all filters in ~FILTER-LIST~ matches.
If FLIST is empty then return t.

- (and ~FILTER-LIST~..) ::
  Same as ~all~

- (not ~FILTER~) ::
  Matches if ~FILTER~ not maches.

- (type ~CHAT-TYPE-LIST~) ::
  Matches if chat type is one of ~CHAT-TYPE-LIST~.

  See [[Chat types]]

- (name ~REGEXP~) ::
  Matches if chat’s title matches ~REGEXP~.

- (custom ~NAME~) ::
  Matches if custom filter with ~NAME~ matches.

- pin ::
  Matches if chat is pinned.

- has-pinned-message ::
  Matches if chat has pinned message.

- (unread [ ~N~ ]) ::
  Matches if chat has least ~N~ unread messages.
By default ~N~ is 1.
Also matches chats marked as unread.

- (mention [ ~N~ ]) ::
  Matches if chat has least ~N~ unread mentions.
By default ~N~ is 1.

- unmuted ::
  Matches if chat has enabled notifications.

- (user-status ~STATUS-LIST~..) ::
  Matches private chat where user status is one of ~STATUS-LIST~.

  Each element in ~STATUS-LIST~ is one of: "Online", "Offline",
  "Recently", "LastWeek", "LastMonth" or "Empty"

- verified ::
  Matches if chat is verified.

- (ids ~ID-LIST~..)
  Matches if chat’s id is one of in ~ID-LIST~.

- me-is-member ::
  Matches if ‘telega-user-me’ is member of the chat.

- has-last-message ::
  Matches if chat has last message.

- has-order ::
  Matches if chat has non-0 order.

  Only chats with non-0 order are listed in rootbuf.  I.e. this
  filter is implicitly applied along with active chat filter.

- has-avatar ::
  Matches if chat has chat photo.

- opened ::
  Matches if chat has corresponding chatbuf.

- (permission ~PERM~) ::
  Matches if chat has ~PERM~ set in chat permissions.
~PERM~ could be one of:
‘:can_send_messages’,‘:can_send_media_messages’, ‘:can_send_polls’,
‘:can_send_other_messages’, ‘:can_add_web_page_previews’,
‘:can_change_info’, ‘:can_invite_users’, ‘:can_pin_messages’

- (restriction ~SUFFIX-LIST~..) ::
  Matches restricted chats.

  Each element in ~SUFFIX-LIST~ is one of:
  + "-all" - Restricted on all platforms
  + "-ios" - Restricted for iOS devices
  + "-android" - Restricted for Android devices
  + "-wp" - Restricted on Windows

  If ~SUFFIX-LIST~ is ommited, then match any reason.

- (contact [ ~MUTUAL-P~ ]) ::
  Matches private chats if corresponding user is a contact.
If ~MUTUAL-P~ is non-nil, then mach only if contact is mutual.

- top ::
  Matches if chat is in top usage.

- saved-messages ::
  Matches only SavedMessages chat.

- (label ~LABEL~) ::
  Matches chat with custom ~LABEL~.

- tracking ::
  Matches if chat is in tracking buffers list.

- (chat-list ~LIST-NAME~) ::
  Matches if chat is in chat list named ~LIST-NAME~.
Only "Main" and "Archive" names are supported.

- main ::
  Matches if chat from "Main" chat list.

- archive ::
  Matchis if chat is archived, i.e. in "Archive" chat list.

- has-scheduled-messages ::
  Matches if chat has scheduled messages.

* Chat buffer

*TODO*: describe chatbuf functionality

** Chat types

Every chat has a type.  Type is one of:
- private :: Private chat with telegram user
- secret :: Secret chat with telegram user
- bot :: Chat with telegram bot
- basicgroup :: Small chat group, could be upgraded to supergroup
- supergroup :: Chat group with all the chat possibilities
- channel :: Supergroup with unlimited members, where only admins can post messags

** Custom chat label

Chat can be assigned with custom label using
@@html:<kbd>@@L@@html:</kbd>@@ (~telega-chat-set-custom-label~)
pressed on chat button.

Custom chat labels is one of the ways to group chats together.
Labeled chats can be easily filtered using ~label~ chat filter.
See [[Chat Filters]]

