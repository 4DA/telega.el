#+OPTIONS: timestamp:nil \n:t
#+TITLE: Telega Manual (v0.6.22)
#+AUTHOR: Zajcev Evgeny
#+startup: showall

#+macro: nl          (eval (concat "\n" (make-string (1- (string-to-number $1)) ?\s)))
#+macro: user-option User Option: ~$1~ {{{nl(1)}}} {{{nl($2)}}} {{{vardoc($1, $2)}}} {{{nl(1)}}} {{{nl($2)}}} Default value: {{{eval((format "~%S~" $1), t)}}}

#+begin_quote
This file is automatically generated from =telega-ellit.org= by
[[https://github.com/zevlg/ellit-org.el][GitHub#ellit-org.el]] tool.
Do not edit manually.  Modify =telega-ellit.org= or comments in
=.el= files instead.
#+end_quote

* Contents
  - [[#telega-glossary][Telega glossary]]
  - [[#root-buffer][Root Buffer]]
    - [[#rootbuf-fast-navigation][Rootbuf fast navigation]]
    - [[#rootbuf-view-switching][Rootbuf view switching]]
  - [[#chat-filters][Chat Filters]]
    - [[#list-of-chat-filters][List of chat filters]]
    - [[#customizable-options-making-use-of-chat-filters][Customizable options making use of Chat Filters]]
  - [[#sorting-chats][Sorting Chats]]
    - [[#sorting-criteria][Sorting criteria]]
  - [[#chat-buffer][Chat buffer]]
    - [[#chat-types][Chat types]]
    - [[#custom-chat-label][Custom chat label]]
    - [[#chatbuf-fast-navigation][Chatbuf fast navigation]]
    - [[#chatbuf-attaching-media][Chatbuf attaching media]]
    - [[#chatbuf-messages-filtering][Chatbuf messages filtering]]
    - [[#sending-ordinary-messages][Sending ordinary messages]]
    - [[#sending-special-messages][Sending special messages]]
    - [[#sending-messages-via-bots][Sending messages via bots]]
    - [[#scheduling-messages-and-self-reminders][Scheduling messages and self reminders]]
    - [[#filtering-messages-in-chatbuf][Filtering messages in chatbuf]]
  - [[#minor-modes][Minor Modes]]
    - [[#telega-mode-line-mode][telega-mode-line-mode]]
    - [[#telega-squash-message-mode][telega-squash-message-mode]]
    - [[#telega-image-mode][telega-image-mode]]
    - [[#telega-edit-file-mode][telega-edit-file-mode]]
  - [[#contributed-packages][Contributed packages]]
    - [[#ol-telegael--org-mode-links-to-telegram-chats-and-messages][/ol-telega.el/ -- Org mode links to telegram chats and messages]]
    - [[#telega-status-historyel--global-minore-mode-to-save-users-online-status-history][/telega-status-history.el/ -- Global minore mode to save user's online status history]]
    - [[#telega-url-shortenel][/telega-url-shorten.el/]]
    - [[#telega-alertel--notifications-using-alertel][/telega-alert.el/ -- Notifications using =alert.el=]]
    - [[#telega-dired-dwimel--attach-files-from-dired-in-dwim-style][/telega-dired-dwim.el/ -- Attach files from dired in DWIM style]]
    - [[#telega-live-locationel--manage-live-location-in-telega-using-geoel][/telega-live-location.el/ -- Manage live location in Telega using geo.el]]

* Telega glossary

Before start, please read [[https://core.telegram.org/tdlib/getting-started#tdlib-glossary][TDLib glossary]]

=telega= tries to keep TDLib's terminology, however introduces some
new terms specific to =telega=.  All of them are used in the manual.

- Root Buffer a.k.a. rootbuf :: 
     Buffer with list of chats, you see it just after @@html:<kbd>@@M-x telega RET@@html:</kbd>@@.
     Most of the time rootbuf term is used in the manual.
     See [[#root-buffer][Root Buffer]]

- Root View :: 
     Root Buffer can be shown in different ways.  Way rootbuf is shown is
     called root view.
     See [[#root-buffer][Root Buffer]]

- Chat Buffer a.k.a. chatbuf :: 
     Buffer with chat contents.
     See [[#chat-buffer][Chat Buffer]]

- Button :: 
     Ordinary Emacs Button (see =button.el=).  Some outlined area with
     text, that can be acted on.  Pressing @@html:<kbd>@@RET@@html:</kbd>@@ on the
     button, executes button action.  There are many buttons of different
     kind in =telega=

- Chat Button :: 
     Button referring to some chat.  Action for such button is to open
     corresponding chatbuf.

     rootbuf lists the chat buttons, such as:
     #+begin_example
       {ðŸŽ—Saved Messages            }ðŸ“Œ  ðŸ“¹ Video (10s)               Friâœ“
       [Emacs | Emacs (english)     ]  @oldosfan: same                Fri
       ...
     #+end_example

- Chat Filter :: 
     S-exp expression used to match chats.
     See [[#chat-filters][Chat Filters]] for the details.

- Active Chat Filter :: 
     Chat filter applied to the chat list in rootbuf.

     Only chats matching active chat filter are displayed in rootbuf.
     Active chat filter is displayed above the chat list in rootbuf, such
     as:
     #+begin_example
       -/------------------------------(main)--------------------------------
     #+end_example

     ~(telega-filter-active)~ returns active chat filter.

  - User Option: ~telega-filter-default~ 

    Default chat filter to apply. 

    Default value: ~main~

- Custom Chat Filter :: 
     Chat filter associated with a name.

     Custom chat filters are displayed as buttons above the chat list in
     the rootbuf, such as:
     #+begin_example
       [243:ðŸ“‘Main      4890]  [51:Groups       4677]  [27:Channels      210]
       [53:Contacts         ]  [0:Important         ]  [3:ðŸ“‘Archive      670]
     #+end_example

     Action for such buttons is to add corresponding chat filter to
     active chat filter.

     However, special (push) custom chat filter buttons exists.  Instead
     of adding chat filter into active chat filter, they substitutes
     active chat filter with custom chat filter. See
     ~telega-filter-custom-push-list~ below.

  - User Option: ~telega-filters-custom~ 

    Alist of custom filters in form (NAME . CHAT-FILTER).
    This filters are displayed as filter buttons at the top of rootbuf.
    TODO: If NAME starts with "lng_" then ~telega-i18n~ is used. 

    Default value: ~(("ðŸ“‘Main" . main) ("Groups" type basicgroup supergroup) ("Channels" type channel) ("Contacts" . contact) ("Important" or mention (and unread unmuted)) ("ðŸ“‘Archive" . archive))~

  - User Option: ~telega-filter-custom-push-list~ 

    List of custom filters to use ~telega-filters-push~ instead of ~telega-filter-add~.
    By default if button with custom filter is pressed, this filter
    is added to the list of active filters.  Custom filters from this
    list always substitutes active filter list.
    Mostly used by ~chat-list~ chat filters. 

    Default value: ~("ðŸ“‘Archive")~

- Chat Sort Criteria :: 
     List of symbols denoting how to sort chats.
     See [[#sorting-chats][Sorting Chats]]

- Active Sort Criteria a.k.a. active sorter :: 
     Sort criteria applied to the chat list in rootbuf.

     By default, chats are sorted according to internal Telegram order
     (except for chats with custom order).

     In case active sorter is enabled, it is displayed above the chat
     list in rootbuf, such as:
     #+begin_example
       -\---------------------(unread-count join-date)-----------------------
     #+end_example

- Me user a.k.a. me :: 
     User currently logged in, ~(telega-user-me)~ returns me.

     me means you, not me.

     Chat with me is also known as "Saved Messages".

* Root Buffer

rootbuf is the heart of =telega=.

*TODO*: describe parts of the rootbuf

** Rootbuf fast navigation

@@html:<kbd>@@M-g@@html:</kbd>@@ prefix in rootbuf is used to jump across chat
buttons.

- @@html:<kbd>@@M-g u@@html:</kbd>@@ (~telega-root-next-unread~) :: 
     Move point to the next chat with unread message.

- @@html:<kbd>@@M-g i@@html:</kbd>@@ (~telega-root-next-important~) :: 
     Move point to the next chat with important messages.

     Important message is the messages matching "Important" custom
     [[#chat-filters][chat filter]].  If there is no "Important"
     custom chat filter, then ~(or mention (and unread unmuted))~
     chat filter is used.

- @@html:<kbd>@@M-g @@@html:</kbd>@@, @@html:<kbd>@@M-g m@@html:</kbd>@@ (~telega-root-next-mention~) :: 
     Move point to the next chat with mention.

** Rootbuf view switching

View different parts of the rootbuf
Special view used to search messages

* Chat Filters

Chat Filters are used to match chats, same as regexps are used to
match strings.  Chat Filters uses S-exp notation similar to ~rx~
package for regexps.  Consider Chat Filters as extremely powerful
"Folders" functionality in official client.

Primitive Chat Filter is a specifier to match some property of the
chat.  Each primitive Chat Filter has name (elisp symbol) and
corresponding function named ~telega--filter-<FILTER-NAME>~.
You can specify primitive Chat Filter in either way:
1. ~<FILTER-NAME>~
2. ~( <FILTER-NAME> <ARG1> [<ARG2> ...] )~

Primitive Chat Filters are combined using ~and~, ~or~ and ~not~
filters, forming final Chat Filter.  So Chat Filter is a logical
combination of other Chat Filters, down to primitive Chat Filters.

Chat Filter examples:
- ~all~ :: 
     Matches all chats

- ~(or saved-messages (type channel bot))~ :: 
     Matches bots/channels chats or "Saved Messages" chat

- ~(and unmuted (unread 10) (mention 1))~ :: 
     Matches unmuted chats with at least 10 unread messages and at
     least one message with unread mention

Matching is done using ~telega-chat-match-p~ function.

@@html:<kbd>@@/@@html:</kbd>@@ prefix in rootbuf is used for some useful filtering
commands.

- @@html:<kbd>@@/ i@@html:</kbd>@@ (~telega-filter-by-important~) :: 
     Filter important chats.
     Important chat is the chat with unread messages and enabled notifications.

- @@html:<kbd>@@/ e@@html:</kbd>@@, @@html:<kbd>@@/ :@@html:</kbd>@@ (~telega-filters-edit~) :: 
     Edit and reapply filters list.

- @@html:<kbd>@@/ f@@html:</kbd>@@, @@html:<kbd>@@/ a@@html:</kbd>@@ (~telega-filter-by-filter~) :: 
     Filter by some filter.

- @@html:<kbd>@@/ DEL@@html:</kbd>@@, @@html:<kbd>@@/ d@@html:</kbd>@@ (~telega-filters-pop-last~) :: 
     Pop last ~N~ filters.

- @@html:<kbd>@@/ !@@html:</kbd>@@ (~telega-filters-negate~) :: 
     Negate active filters.

- @@html:<kbd>@@/ /@@html:</kbd>@@ (~telega-filters-reset~) :: 
     Reset all active filters to default.

For other Chat Filter bindings see below.

** List of chat filters

- (any ~FILTER-LIST~...) :: 
     Matches if any filter in ~FILTER-LIST~ matches.

- (or ~FILTER-LIST~...) :: 
     Same as ~any~

- (all ~FILTER-LIST~...) :: 
     Matches if all filters in ~FILTER-LIST~ matches.
     Also matches if ~FILTER-LIST~ is empty.

- (and ~FILTER-LIST~...) :: 
     Same as ~all~

- (not ~FILTER~) :: 
     Matches if ~FILTER~ not maches.

- (type ~CHAT-TYPE-LIST~), @@html:<kbd>@@/ t@@html:</kbd>@@ (~telega-filter-by-type~) :: 
     Matches if chat type is one of ~CHAT-TYPE-LIST~.

     See [[#chat-types][Chat types]]

- (name ~REGEXP~) :: 
     Matches if chat's title matches ~REGEXP~.

- (search ~QUERY~), @@html:<kbd>@@/ s@@html:</kbd>@@, @@html:<kbd>@@/ n@@html:</kbd>@@ (~telega-filter-by-search~) :: 
     Matches if chat maches search QUERY.

- (custom ~NAME~), @@html:<kbd>@@/ C@@html:</kbd>@@ (~telega-filter-by-custom~) :: 
     Matches if custom filter with ~NAME~ matches.

- pin, @@html:<kbd>@@/ P@@html:</kbd>@@, @@html:<kbd>@@/ ^@@html:</kbd>@@ (~telega-filter-by-pin~) :: 
     Matches if chat is pinned.

- has-pinned-message :: 
     Matches if chat has pinned message.

- (unread [ ~N~ ]), @@html:<kbd>@@/ u@@html:</kbd>@@ (~telega-filter-by-unread~) :: 
     Matches if chat has least ~N~ unread messages.
     By default ~N~ is 1.
     Also matches chats marked as unread.

- (mention [ ~N~ ]), @@html:<kbd>@@/ m@@html:</kbd>@@ (~telega-filter-by-mention~) :: 
     Matches if chat has least ~N~ unread mentions.
     By default ~N~ is 1.

- unmuted, @@html:<kbd>@@/ y@@html:</kbd>@@ (~telega-filter-by-unmuted~) :: 
     Matches if chat has enabled notifications.

- (online-status ~STATUS-LIST~...), @@html:<kbd>@@/ o@@html:</kbd>@@ (~telega-filter-by-online-status~) :: 
     Matches private chat where user status is one of ~STATUS-LIST~.

     Each element in ~STATUS-LIST~ is one of: "Online", "Offline",
     "Recently", "LastWeek", "LastMonth" or "Empty"

- verified, @@html:<kbd>@@/ v@@html:</kbd>@@ (~telega-filter-by-verified~) :: 
     Matches if chat is verified.

- (ids ~ID-LIST~...) :: 
     Matches if chat's id is one of in ~ID-LIST~.

- me-is-owner :: 
     Matches if me is the owner of the chat.
     Only basicgroup, supergroup and channel can be owned.

- me-is-member :: 
     Matches if me is member of the chat.

- has-last-message :: 
     Matches if chat has last message.

- has-order :: 
     Matches if chat has non-0 order.

     Only chats with non-0 order are listed in rootbuf.  I.e. this
     filter is implicitly applied along with active chat filter.

- has-avatar :: 
     Matches if chat has chat photo.

- has-chatbuf, @@html:<kbd>@@/ b@@html:</kbd>@@ (~telega-filter-by-has-chatbuf~) :: 
     Matches if chat has corresponding chatbuf.

- (permission ~PERM~) :: 
     Matches if chat has ~PERM~ set in chat permissions.
     ~PERM~ could be one of:
     ~:can_send_messages~, ~:can_send_media_messages~, ~:can_send_polls~,
     ~:can_send_other_messages~, ~:can_add_web_page_previews~,
     ~:can_change_info~, ~:can_invite_users~, ~:can_pin_messages~

- (restriction ~SUFFIX-LIST~...), @@html:<kbd>@@/ r@@html:</kbd>@@ (~telega-filter-by-restriction~) :: 
     Matches restricted chats.
     ~SUFFIX-LIST~ is a list of suffixes to filter on.
     Suffix can be one of:
  - "-all"      - All platforms
  - "-ios"      - For iOS devices
  - "-android"  - For Android devices
  - "-wp"       - Windows?

  If ~SUFFIX-LIST~ is not specified, then match any restriction reason.

- (contact [ ~MUTUAL-P~ ]), @@html:<kbd>@@/ c@@html:</kbd>@@ (~telega-filter-by-contact~) :: 
     Matches private chats if corresponding user is a contact.
     If ~MUTUAL-P~ is non-nil, then mach only if contact is mutual.

- top, @@html:<kbd>@@/ T@@html:</kbd>@@ (~telega-filter-by-top~) :: 
     Matches if chat is in top usage.

- saved-messages :: 
     Matches only SavedMessages chat.

- (label ~LABEL~), @@html:<kbd>@@/ l@@html:</kbd>@@ (~telega-filter-by-label~) :: 
     Matches chat with custom ~LABEL~.

- tracking, @@html:<kbd>@@/ SPC@@html:</kbd>@@ (~telega-filter-by-tracking~) :: 
     Matches if chat is in tracking buffers list.

- last-message-by-me :: 
     Matches if chat's last message sent by me.

- (chat-list ~LIST-NAME~) :: 
     Matches if chat is in chat list named ~LIST-NAME~.
     Only "Main" and "Archive" names are supported.

- main :: 
     Matches if chat from "Main" chat list.

- archive :: 
     Matchis if chat is archived, i.e. in "Archive" chat list.

- has-scheduled-messages :: 
     Matches if chat has scheduled messages.

** Customizable options making use of Chat Filters

- User Option: ~telega-filter-default~ 

  Default chat filter to apply. 

  Default value: ~main~

- User Option: ~telega-filters-custom~ 

  Alist of custom filters in form (NAME . CHAT-FILTER).
  This filters are displayed as filter buttons at the top of rootbuf.
  TODO: If NAME starts with "lng_" then ~telega-i18n~ is used. 

  Default value: ~(("ðŸ“‘Main" . main) ("Groups" type basicgroup supergroup) ("Channels" type channel) ("Contacts" . contact) ("Important" or mention (and unread unmuted)) ("ðŸ“‘Archive" . archive))~

- User Option: ~telega-use-tracking-for~ 

  Specifies Chat Filter for chats to be tracked with tracking.el.
  Make sure you have tracking.el loaded if this option is used.
  Only chats with corresponding opened chatbuf are tracked. 

  Default value: ~nil~

- User Option: ~telega-rainbow-color-custom-for~ 

  List of custom colors for chats.
  Each element is cons cell, where car is Chat Filter, and cdr is color. 

  Default value: ~((saved-messages))~

- User Option: ~telega-chat-prompt-show-avatar-for~ 

  Chat Filter for which chats to show avatar nearby the prompt. 

  Default value: ~nil~

- User Option: ~telega-chat-group-messages-for~ 

  Chat Filter for chats where to group messages by sender. 

  Default value: ~(not (or saved-messages (type channel bot)))~

- User Option: ~telega-chat-show-deleted-messages-for~ 

  Chat Filter for chats where to show deleted messages in chatbuf. 

  Default value: ~nil~

* Sorting Chats

It is possible to sort chats in rootbuf out of Telega built-in
order.  Sorting chats is done by some criteria.  Built-in criterias
are in ~telega-sort-criteria-alist~.  Do not insert criterias
directly into ~telega-sort-criteria-alist~, use
~define-telega-sorter~ instead.

@@html:<kbd>@@\@@html:</kbd>@@ prefix in rootbuf is used for sorting commands.

- @@html:<kbd>@@\ \@@html:</kbd>@@ (~telega-sort-reset~) :: 
     Reset active sorter.

     It is possible to add multiple criteria using ~telega-sort-reset~
     with prefix argument @@html:<kbd>@@C-u@@html:</kbd>@@.

- @@html:<kbd>@@\ s@@html:</kbd>@@, @@html:<kbd>@@\ a@@html:</kbd>@@ (~telega-sort-by-sorter~) :: 
     Interactively add ~CRITERIA~ to active sorter.
     If prefix ~ARG~ is used, then add sort criteria, instead of
     overwritting currently active one.

     Use this command to reset active sorter.

** Sorting criteria

- ~unread-count~, @@html:<kbd>@@\ u@@html:</kbd>@@ (~telega-sort-by-unread-count~) :: 
     Sort chats by number of unread messages in chat.

- ~title~, @@html:<kbd>@@\ t@@html:</kbd>@@ (~telega-sort-by-title~) :: 
     Sort chats by number of online members.

     Thanks to https://t.me/Kurvivor

- ~member-count~, @@html:<kbd>@@\ m@@html:</kbd>@@ (~telega-sort-by-member-count~) :: 
     Sort chats by number of members in the chat.

- ~online-members~, @@html:<kbd>@@\ o@@html:</kbd>@@ (~telega-sort-by-online-members~) :: 
     Sort chats by number of online members.

- ~join-date~, @@html:<kbd>@@\ j@@html:</kbd>@@ (~telega-sort-by-join-date~) :: 
     Sort chats by join date.  Last joined chats goes first.

- ~chatbuf-recency~, @@html:<kbd>@@\ v@@html:</kbd>@@ (~telega-sort-by-chatbuf-recency~) :: 
     Sort chats by chatbuf recency.  Recently used chats goes first.

- ~chatbuf-visibility~ :: 
     Sort chats by visibility in other window in DWIM style.
     See https://github.com/zevlg/telega.el/issues/165

- TODO Date of last message sent by ~telega-user-me~
- TODO Date of last mention (thanks to https://t.me/lainposter)

* Chat buffer

*TODO*: describe chatbuf functionality

** Chat types

Every chat has a type.  Type is one of:
- private :: Private chat with telegram user
- secret :: Secret chat with telegram user
- bot :: Chat with telegram bot
- basicgroup :: Small chat group, could be upgraded to supergroup
- supergroup :: Chat group with all the chat possibilities
- channel :: Supergroup with unlimited members, where only admins can post messags

** Custom chat label

Chat can be assigned with custom label using
@@html:<kbd>@@L@@html:</kbd>@@ (~telega-chat-set-custom-label~)
pressed on chat button.

Custom chat labels is one of the ways to group chats together.
Labeled chats can be easily filtered using ~label~ chat filter.
See [[#chat-filters][Chat Filters]]

** Chatbuf fast navigation

@@html:<kbd>@@M-g@@html:</kbd>@@ prefix in chatbuf is used to jump across chat
messages.

- @@html:<kbd>@@M-g <@@html:</kbd>@@ (~telega-chatbuf-history-beginning~) :: 
     Jump to the chat creation beginning.

- @@html:<kbd>@@M-g r@@html:</kbd>@@, @@html:<kbd>@@M-g >@@html:</kbd>@@ (~telega-chatbuf-read-all~) :: 
     Read all messages in chat buffer.

- @@html:<kbd>@@M-g @@@html:</kbd>@@, @@html:<kbd>@@M-g m@@html:</kbd>@@ (~telega-chatbuf-next-unread-mention~) :: 
     Goto next unread mention in chat buffer.

- @@html:<kbd>@@M-g u@@html:</kbd>@@ (~telega-chatbuf-next-unread~) :: 
     Goto next uneard message in chat.
     ~BUTTON-CALLBACK~ - callback to call with single argument - message
     button.

- @@html:<kbd>@@M-g ^@@html:</kbd>@@, @@html:<kbd>@@M-g P@@html:</kbd>@@ (~telega-chatbuf-goto-pin-message~) :: 
     Goto pinned message for the chatbuffer.

- @@html:<kbd>@@M-g x@@html:</kbd>@@ (~telega-chatbuf-goto-pop-message~) :: 
     Pop message from ~telega-chatbuf--messages-ring~ and goto it.

** Chatbuf attaching media

Attach types are defined in ~telega-chat-attach-commands~.  By
default next attachement types are defined: =photo=, =self-destruct-photo=, =video=, =self-destruct-video=, =note-video=, =audio=, =note-voice=, =file=, =gif=, =location=, =poll=, =contact=, =member=, =sticker=, =animation=, =scheduled=, =dice=, =screenshot=, =clipboard=

Chatbuf bindings to attach something:

- @@html:<kbd>@@C-c C-a@@html:</kbd>@@ (~telega-chatbuf-attach~) :: 
     Attach something into message.
     Prefix argument is available for next attachements:
       screenshot - Takes numeric prefix argument to delay taking
     	       screenshot.
       sticker    - Takes C-u prefix argument to attach favorite/recent
     	       sticker.
       clipboard  - Available only if image is in the clipboard.
     	       Takes C-u prefix argument to attach clipboard as
     	       document.
       animation  - Takes C-u prefix to attach file as animation.
     	       (Same as attching "gif")
       location   - Takes C-u prefix to attach live location.
       poll       - Takes C-u prefix to create non-anonymous poll.
       scheduled  - Takes C-u prefix to send message when user gets online.

- @@html:<kbd>@@C-c C-f@@html:</kbd>@@ (~telega-chatbuf-attach-file~) :: 
     Attach ~FILENAME~ as document to the current input.

- @@html:<kbd>@@C-c C-v@@html:</kbd>@@ (~telega-chatbuf-attach-clipboard~) :: 
     Send clipboard image to the chat.
     If ~DOC-P~ prefix arg as given, then send it as document.

** Chatbuf messages filtering

Messages filtering means to show only some messages matching
filter.  Available messages filters are: =scheduled=, =search=, =hashtag=, =photo=, =photo-video=, =url=, =doc=, =file=, =gif=, =audio=, =video=, =voice-note=, =video-note=, =voice-video-note=, =chat-photo=, =call=, =missed-call=, =mention=, =unread-mention=

Chatbuf uses next bindings for messages filtering:

- @@html:<kbd>@@C-c /@@html:</kbd>@@ (~telega-chatbuf-filter~) :: 
     Enable chat messages filtering.
     Enables ~FILTER-NAME~ filter.
     ~QUERY~ is only used by "search" chatbuf filter.
     If ~@@html:<kbd>@@C-u@@html:</kbd>@@~ is specified, then filter by sender
     of the message at point.
     Not all filters can filter by sender.

- @@html:<kbd>@@C-c C-c@@html:</kbd>@@ (~telega-chatbuf-filter-cancel~) :: 
     Cancel any message filtering.
     If point is at some message, then keep point on this message after reseting.

- @@html:<kbd>@@C-c C-s@@html:</kbd>@@ (~telega-chatbuf-filter-search~) :: 
     Interactively search for messages in chatbuf.
     If non-nil ~BY-SENDER-P~ is specified by ~@@html:<kbd>@@C-u@@html:</kbd>@@~,
     then also search by sender.

** Sending ordinary messages
** Sending special messages
** Sending messages via bots
** Scheduling messages and self reminders

1. Put message at point into messages ring
2. If message seen in chatbuf, jump to it
3. Otherwise, fetch history containing message and jump to it

** Filtering messages in chatbuf
* Minor Modes

=telega= ships with various minor modes you might consider to use.

** telega-mode-line-mode

Global minor mode to display =telega= status in modeline.

Enable with ~(telega-mode-line-mode 1)~, or at =telega= load time:
#+begin_src emacs-lisp
  (add-hook 'telega-load-hook 'telega-mode-line-mode)
#+end_src

Customizable options:

- User Option: ~telega-mode-line-string-format~ 

  Format in mode-line-format for ~telega-mode-line-string~. 

  Default value: ~("   " (:eval (telega-mode-line-icon)) (:eval (telega-mode-line-online-status)) (:eval (when telega-use-tracking-for (telega-mode-line-tracking))) (:eval (telega-mode-line-unread-unmuted)) (:eval (telega-mode-line-mentions 'messages)))~

** telega-squash-message-mode

Minor mode for chatbuf to squash messages into single one while
nobody saw this.

Squashing mean adding contents of the new message to the previous
message by editing contents of the previous message.

New message in chat is squashed into your previous message only if
all the conditions are met:

1. Last message in chat is sent by you
2. Nobody seen your last message
3. Last and new message are both text messages
4. Last message can be edited
5. Last and new messages are *not* replying to any message
6. Last message has no associated web-page
7. Last message has no emojis, see https://github.com/zevlg/telega.el/issues/148

Can be enabled globally in all chats matching
~telega-squash-message-mode-for~ (see below) chat filter with
~(global-telega-squash-message-mode 1)~ or by adding:

#+begin_src emacs-lisp
  (add-hook 'telega-load-hook 'global-telega-squash-message-mode)
#+end_src

** telega-image-mode

Major mode to view images in chatbuf.  Same as ~image-mode~,
however has special bindings:

- @@html:<kbd>@@n@@html:</kbd>@@ (~telega-image-next~) :: 
     Show next image in chat.

- @@html:<kbd>@@p@@html:</kbd>@@ (~telega-image-prev~) :: 
     Show previous image in chat.

To view highres image in chatbuf with ~telega-image-mode~ press
@@html:<kbd>@@RET@@html:</kbd>@@ on the message with photo.

** telega-edit-file-mode

Minor mode to edit files from Telegram messages.
In this mode @@html:<kbd>@@C-x C-s@@html:</kbd>@@ will save file to Telegram cloud.
To enable ~telega-edit-file-mode~ for files opened from message
with @@html:<kbd>@@RET@@html:</kbd>@@, use:

#+begin_src emacs-lisp
  (add-hook 'telega-find-file-hook 'telega-edit-file-mode)
#+end_src

* Contributed packages

=contrib/= directory contains packages contributed to telega.el
project.

** /ol-telega.el/ -- Org mode links to telegram chats and messages

Installs "telegram" links to Org mode.

** /telega-status-history.el/ -- Global minore mode to save user's online status history

Saves online status history into ~telega-status-history-logs-dir~ directory.

** /telega-url-shorten.el/

Minor mode for chatbuf to show shorter version for some URLs.  For
example, with ~telega-url-shorten-mode~ enabled in chatbuf, urls
like:

#+begin_example
  https://github.com/zevlg/telega.el/issues/105
  https://gitlab.com/jessieh/mood-line/issues/6
  https://www.youtube.com/watch?v=0m2jR6_eMkU
  https://ru.wikipedia.org/wiki/Ð”ÑƒÑˆ
#+end_example

Will look like:
[[https://zevlg.github.io/telega/telega-url-shorten.png]]

Can be enabled globally in all chats matching
~telega-url-shorten-mode-for~ (see below) [[#chat-filters][chat
filter]] with ~(global-telega-url-shorten-mode 1)~ or by adding:

#+begin_src emacs-lisp
  (add-hook 'telega-load-hook 'global-telega-url-shorten-mode)
#+end_src

Depends on
[[https://github.com/domtronn/all-the-icons.el][all-the-icons]]
Emacs package.

*** Customizable options:

- User Option: ~telega-url-shorten-use-images~ 

  Non-nil to use images on graphics display. 

  Default value: ~nil~

- User Option: ~telega-url-shorten-regexps~
  Alist of patterns for URL shortening.

  To change ~:symbol~ or ~:svg-icon~ property for existing url
  shortening pattern use something like:
  #+begin_src
    (plist-put (cdr (assq '<LABEL> telega-url-shorten-regexps))
    	   :<PROP> <VALUE>)
  #+end_src

- User Option: ~telega-url-shorten-mode-for~ 

  Chat filter for ~global-telega-url-shorten-mode~.
  ~global-telega-url-shorten-mode~ enables urls shortening only for
  chats matching this chat filter. 

  Default value: ~all~

** /telega-alert.el/ -- Notifications using =alert.el=

To enable notifications using =alert.el= use:
#+begin_src emacs-lisp
  (telega-alert-mode 1)
#+end_src

Alerts for =telega.el= are fired with ~:mode 'telega-chat-mode~
value.  You might use this to customize alert rules with
~alert-add-rule~.

** /telega-dired-dwim.el/ -- Attach files from dired in DWIM style

This package advises ~dired-do-copy~ to attach files into visible chatbuf.

In dired, mark files you want to attach and press @@html:<kbd>@@C@@html:</kbd>@@.  If
you have some chatbuf visible, marked files will be attached in
that chatbuf.

** /telega-live-location.el/ -- Manage live location in Telega using geo.el

Enable this mode with @@html:<kbd>@@M-x global-telega-live-location-mode RET@@html:</kbd>@@

This mode installs new ~live-geo-location~ chat attach type, use it
with @@html:<kbd>@@C-c C-a live-geo-location RET@@html:</kbd>@@ in the chatbuf.

This mode requires the =geo.el= library, available at
https://git.sr.ht/~oldosfan/geo-xdg.el
