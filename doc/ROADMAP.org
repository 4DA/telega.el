#-*- mode: org -*-
#+TODO: TODO WIP DONE
#+STARTUP: showall

* telega.el Major Features

** Root Views, different views for the rootbuf
   CREATED: [2020-03-17]

   - [X] Searching
   - [ ] Nearby users/chats
   - [ ] Chats, grouped by custom labels
         #+begin_example
         *OOS*
           [chat1      ]
           [chat2      ]
         *Emacs*
           [chat1      ]
           [chat2      ]
         #+end_example
   - [ ] Last messages in the chats (idea by @mrkiko)

** WIP Multiple Accounts
   - See https://github.com/tdlib/td/issues/959
   - DONE initially, accounts can be switched with
     ~M-x telega-switch-account RET~.  Done by specifying different
     database directories for different accounts.

   - Personal rootbuf per account
   - Make all vars used by telega buffer-local in corresponding rootbuf
   - Account and "engine" saved in rootbuf
   - All calls/callbacks to have "engine" param, explicitly or
     implicitly (from rootbuf's "engine")
   - Set "engine" on every chat/msg/user to be implicitly used in TDLib calls
   - How chatbuf should be shown per account?
   - How notifications should be shown per account?
     Maybe "--> <ACCOUNT>" as in official clients?

** AppIndicator in telega-server

** Searching Messages in chat
   - [X] Shared Media
   - [ ] Importing/Exporting files using "Saved Messages"

** Full integration for Transalation Platform

** Grain control on traffic (see [[https://github.com/zevlg/telega.el/issues/62][telega#62]])

** DONE Stickers support in non-imagemagick Emacs
   CLOSED: [2020-02-12 Ср 18:02]

** DONE Chat sorting
   CLOSED: [2020-02-01 Сб 12:13]

   By default chats are ordered by date of the last message in chat.

   But =telega= might sort chats by some other criteria.  Criteria might be:
   - Title of the chat in alphabetical order (thanks to https://t.me/Kurvivor)
   - Number of unread messages
   - (WON'T DO) Number of mentions
   - Number of chat members
   - Number of online chat members
   - Chat join date
   - (NOT YET) Date of last message sent by ~telega-user-me~
   - (NOT YET) Date of last mention (thanks to https://t.me/lainposter)

* telega-server as a module

Implement telega-server as Emacs module to improve overall performance.

   - Engine abstration to distinguish TDLib/TON/VoIP clients.
   - Save "engine" value inside rootbuf
   - "engine" as telega-server and telega-server as "engine"

* TON

** DONE tonlib integration
   CLOSED: [2020-01-20 Пн 14:24]
   VERSION: 0.5.8
** Wallet, with list of transactions, etc (see [[https://t.me/designers/134]])
** TON Browser for TON services and smart contracts (see [[https://test.ton.org/ton.pdf]])

* Random Ideas

Random list of ideas for telega.el

** Grouping chats by custom label, similar to ~gnus-topic.el~
#+begin_example
    *OOS*
      [chat1      ]
      [chat2      ]
    *Emacs*
      [chat1      ]
      [chat2      ]
#+end_example

   WON'T DO.  See [[Root Views, different views for the rootbuf]]

** Global searchable history of the inputs you've sent to any chat

** Filters for chat messages
   - [X] Scheduled messages
     #+begin_example
     MSG1
     MSG2
     ______________________________________[scheduled]__
     Filter: scheduled
     >>> []
     #+end_example

   - [ ] Message thread as in https://t.me/designers/44
     #+begin_example
     MSG1
     MSG2
     ________________________________________[related]__
     [x] Filter: related
     >>> []
     #+end_example

   - [X] Shared Media
     #+begin_example
     MSG1
     MSG2
     _________________________________________[photos]__
     [x] Filter: photos
     >>> []
     #+end_example

   - [X] Searching in chat
     #+begin_example
     MSG1
     MSG2
     _________________________________[search "hello"]__
     [x] Filter: searching for "hello"
     >>> []
     #+end_example

** Client Side filtering for advert messages in channels

   Mark message with ~telega-msg-ignore~ if it contains keyboard
   button with some link such as t.me/joinchat/xxx.  Much like this
   message is advert

** Do not show input prompt for chats you can't write into

   see https://t.me/emacs_telega/3775

** Annotations for chats/users

   Sometimes it is very useful to have some notes about user or chat.
   We can specially mark users with annotations, so you can see you
   have some notes about given person.

   Store this annotation in chat's ~:client_data~

** Animated text messages

   Text message incrementally appears.  This uses simple timer and just
   updates message content by adding chars one after another.  So it
   looks like you are typing this message.

** Favorite Messages

   Ability to mark some message as favorite.  Emphasize favorite
   message with some symbol like ★ (see [[https://github.com/zevlg/telega.el/issues/139][telega#139]])

   We create special message in "Saved Message" and keep list of links
   to the all favorite messages.  ~ID~ of this message we store in
   custom telegram option, such as ~X-favorites-msg-id~

   NOTE: Option won't work, because custom options are cleared after
   logout.  Might have ~#favorite-messages~ tag as first line of the
   message with list of links to favorite messages

   Above approach is bad. WHY?

   To mark message as favorite, just post internal telega link to the
   message into "Saved Messages" with ~#favorite~ hashtag at the end.
   Then simple ~searchChatMessages~ for ~#favorite~ hashtag.

   However this approach will make listing favorite messages more
   complex.  And making functionality such as outlining message as
   favorite much much more complex.  So maybe former approach is not
   so bad.

** Mark all chatbuf as readonly, keeping input area as ~inhit-read-only~

** Only changes in chatbuf input goes to undo list, making undo/redo commands usable

** Heavy background jobs

   When focus switches off the Emacs and Emacs goes to idle we can
   execute heavy tasks, such as fetching installed stickersets.

** DONE Mode to track switch-in chats and move cursor to corresponding chat in rootbuf
   CLOSED: [2020-02-13 Чт 21:39]

   Done by ~track~ value for ~telega-root-keep-cursor~.

   So if side-by-side window setup used, then switching chats reflects
   in the rootbuf.

   Side-by-side window setup:
   #+begin_src elisp
   (setq telega-chat--display-buffer-action
         '((display-buffer-reuse-window display-buffer-use-some-window)))
   (setq telega-inserter-for-chat-button 'telega-ins--chat-full-2lines)

   (setq telega-chat-button-width 15)
   (setq telega-root-fill-column (+ 7 telega-chat-button-width))
   #+end_src

   This should be executed *before* loading telega, because changing
   ~telega-inserter-for-chat-button~ in runtime won't have any effect.

** DONE Messages squashing mode ~telega-squash-message-mode~ 
   CLOSED: [2020-02-01 Сб 23:00]

   If last message in group is sent by you, and not yet seen by any
   chat participant, and you send next message within
   ~telega-squash-message-period~ seconds, then instead of sending new
   message to chat, last message is edited (adding new text to the end
   of the message).

   Works only for messages of ~messageText~.

** Forwarding as link to message

   Have custom option ~telega-forward-public-message-as-link~ to
   forward messages from public chats (i.e. messages having public
   link) as text URL.

** DONE Special mode to view images
   CLOSED: [2020-02-14 Пт 02:30]

   Mode to view images from chatbuf.

   - Save chat and current image message in image-view buffer
   - `n' next image in chat
   - `p' prev image in chat

** Ввести custom variable - telega-media-size

   '(MIN-WIDTH  MIN-HEIGHT MAX-WIDTH  MAX-HEIGHT)

   И при показе любой картинки делать её, чтобы она была в пределах
   этих размерах, не меньше и не больше.  Если картинка не помещается
   (меньше или больше по ширине или высоте), то скейлим.  После
   применения скейлинга нужно посчитать как x-margin так и y-margin
   (задаётся как cons в :margin)
